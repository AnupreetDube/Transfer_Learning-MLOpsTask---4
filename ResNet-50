#Importing ResNet model directly from Keras
from keras.applications import ResNet50 as resnet50

#Creating Model using the pretrained weights from Imagenet dataset
#Imagenet dataset contains 14,197,122 images under  21841 Total Categories
#Refer this link to know more about imagenet dataset -- http://www.image-net.org/about-stats
model =resnet50(weights='imagenet')

#To check the input size for this model
model.layers[0].input

#importing image module of keras
from keras.preprocessing import image

#Loading any random Image of our choice
test_image = image.load_img('Bottle.jpg', target_size=(224,224))

#to view the image
test_image

#see the image size
test_image.size

#see the test image type (PIL)
type(test_image)

#Convert test image (Of PIL type) to Numpy
numpy_image = image.img_to_array(test_image)

# to see shape and type of numpy_image
numpy_image.shape
type(numpy_image)

#Importing numpy module for image preprocessing
import numpy as n

#Converting the 3D image to 4D Because CNN needs 4D images
img4D = n.expand_dims(numpy_image, axis=0)
img4D.shape

#SCALING the image
from keras.applications.resnet50 import preprocess_input
Y = preprocess_input(img4D)

#Predicting the test image
prediction=model.predict(Y)

#The above predictions are complex and hard to understand
#Hence we will convert these predicted numbers to txt
from keras.applications.resnet50 import decode_predictions

#Predicting the Image now : 
predicton = model.predict(Y)

#Viewing the Top 5 Predictions for our test image by the model
decode_predictions(prediction, top=5)[0]

